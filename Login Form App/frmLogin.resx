<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAo
        CwAAAk1TRnQBSQFMAgEBAgEAATgBAAE4AQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAA0cBggNHAYEDRwGBA0cBgANJAYgDUgGkA1kBugNaAb0DXQHFA1YBtQNR
        AaADRwGCA0cBggNHAYEDRwGCA0cBggNJAYcDUQGcA0wBjwNOAZQDTgGYA0oBiQNRAZwDSwGOA04BlQNP
        AZcDSgGJA1ABnQNKAYwDTwGXA04BlQNJAYeAAANHAYEDRwGBA0gBhgNWAbEChAGFAe4CcQGEAf4BOAE5
        AYMB/wEmAScBdwH/ASYBJwF3Af8BOAE5AYMB/wJrAZkB/wJ/AYEB6wNbAcEDSAGDA0cBggNHAYEDTAGS
        A00BkQNKAYwDTgGWA0kBhwNMAZMDTAGPA0wBjwNQAZ0DSgGNA0wBkwNLAY4DSwGOA04BlANKAYkDTAGS
        gAADRwGBA0gBhQOAAecChQGfAf8BHgEgAYEB/wEhASQBkwH/ASIBJgGZAf8BHwEkAZkB/wEfASQBmQH/
        ASIBJgGYAf8BIQEkAZMB/wEeASABgQH/AYUBhgGfAf8DawHYA0gBhANHAYEDTAGPA08BlwNMAZADTgGW
        A0wBkANRAZ8CbAFbAeEBegF9ASMB+AF0AYkBAAH/AXgBewEcAfoBbQFwAVQB6ANaAcADTAGPA08BlwNM
        AZADTAGPgAADRwGCA1sBvgKNAasB/wEcAR8BjQH/AUcBTAGRAfoBKgEwAaEB/wETARoBngH/ARMBGwGh
        Af8BEwEbAaIB/wETARoBnwH/AScBLAGfAf8BNwE5AYoB/AEdASABjQH/AY0BjgGrAf8DXgHGA0cBggNJ
        AYgDTgGWA0oBjANMAZIDWwHEAWQBhAEWAfsBegF9ASAB+gJeAVsBywJdAVsBwwJfAVwBzAFrAW0BVAHl
        AXMBiAEAAf8CYwFWAdkDTwGXA0sBjgNJAYiAAANHAYICpwGvAfgBJgEpAZQB/wFqAW8BnQH4AykBPgMp
        AT4BWAFcAZsB+AEfASwBswH/AR8BLAGzAf8BSgFTAZsB+wMtAUYDCAELA1sBwwEmASoBlQH/ApUBmgHz
        A0cBggNOAZYDTQGRA0sBjgJWAVUBtQFoAYoBDAH9AmIBWQHXA04BmQNMAZADTwGXA0kBiANPAZcCWwFY
        AcEBfQF/AQgB/gJjAVoB1QNKAYkDTgGWgAADRwGCAXABcwG4Af8BIwErAaQB/wNIAYQIAAMoATwBXgFf
        AaoB+wFNAU8BpgH6AywBQwgAA0cBggEjASoBowH/AXUBeAGjAf4DRwGCA0gBhQNQAZoDSwGOAXUBfgFE
        AfEBcgF1AU4B7QNKAYwDVwG2A1MBpQNMAZMDTgGVA0gBhgNRAZwCXgFbAcsBdQGKAQAB/wNVAbADSAGE
        gAADUQGiATMBOQGnAf8BIwEuAa4B/wFUAVwBnQH4AywBQwgAAykBPwMpAT8IAAMpAT8BVgFhAaUB+QEi
        AS0BrQH/ATIBOAGmAf8DSQGIA04BlANMAZADTgGZAWoBbwFVAeYDUgGhA04BlQNYAbsBhQGSAR4B/QJW
        AVUBtQNJAYcDTgGVA0oBjANOAZQBdwGJASEB+wJcAVkBxwNMAZOAAANdAcMBKQEyAa0B/wEqATkBuAH/
        ATMBRQHDAf8BYgFqAa4B+QMrAUIQAAMqAUABXwFhAbkB+wEyAUMBwgH/ASkBNwG3Af8BKAExAawB/wNZ
        AboDSwGOAl8BXAHMAmUBVgHcAWQBZwFYAd0CZQFWAd8BYAFjAVYB2QFwAXQBSAHtAXMBiAEAAf8BfAF/
        AQYB/gFcAV0BWgHFA00BkQNPAZcDTAGPAW0BcQFRAeoCaQFWAeIDSgGNgAADWgG9ATIBPQG3Af8BOgFL
        AcQB/wFGAVsBzwH/AVABaAHXAf8BewGBAaYB9AMDAQQIAAMDAQQBjAGSAbsB+QFPAWYB1gH/AUUBWgHO
        Af8BOgFJAcMB/wExATwBtgH/AlUBVgG1A0oBigJhAVwBzwFoAWwBVgHhAWYBawFXAeMBZQFpAVYB4gFm
        AWoBWQHgAW4BdgFHAe4BcwGIAQAB/wF8AX8BBgH+A1kBvwNKAYwDTgGUA0oBiwFtAXEBUQHqAWgBbAFY
        AeEDSgGKgAADWQG3AToBRwG9Af8BTQFeAc0B/wFaAXEB2QH/AXcBkAHIAfsDLAFDEAADKgFAAX8BiwG5
        AfkBWAFvAdgB/wFMAV0BzQH/AToBRgG8Af8DWwHBA04BlQNNAZEDUAGbAWUBaQFWAeIDUgGnA04BlgNY
        AbwBdwGKASEB+wNXAbYDSgGJA04BlgNLAY4DTgGVAXkBfAEcAfoCXgFcAckDTgGUgAADSAGFAVwBaAHJ
        Af8BXwFxAdYB/wF6AYABxgH8AywBRAgAAyoBQQMnAToIAAMpAT4BewGFAb8B+gFeAW8B1QH/AVEBWgG6
        Af0DSAGFA0gBhQNQAZoDSwGOAXgBfAFEAfIBcgF1AU0B7QNKAY0DVwG2A1QBpgNMAZMDTgGVA0gBhgNR
        AZwCYwFeAdEBdQGKAQAB/wNUAa8DSAGEgAADRwGCAWUBZwFwAd0BagGDAdoB/wNIAYUIAAMsAUQBqAG2
        AcYB+AGuAcIB0wH7AywBRAgAA0cBgAFpAYIB2gH/AmUBcQHcA0gBgwNOAZUDTAGPA0oBjQNWAbEBdgGL
        AQAB/wJjAVoB1QNOAZgDSwGOA04BlgNIAYYDTgGWA1oBwAF1AXsBDQH8AV4BYgFaAdMDSQGHA04BlYAA
        A0cBgANRAZ8BawGOAcEB/QGZAagBwgH5AyQBNgMqAUEBuAHFAdMB+wHSAeIB/gH/AdIB4gH+Af8BrQG3
        AcsB+QMqAUADCQEMAVsCXQHDAXcBjQHaAf8DUgGhA0cBgANKAYwDTgGYA0wBjwNOAZUCYAFdAcsBYwGE
        ARYB+wGCAYoBIwH5AmIBXgHQA1oBwAJfAVwBzAFsAW4BUAHpAXMBiAEAAf8CbAFbAeEDUQGcA0wBkgNK
        AYyAAANHAYADRwGAA1MBpQF/AY8B0gH+AaIBtAHfAf4BrQHCAeQB/gHKAd0B/AH/AdUB5AH+Af8B1AHk
        Af4B/wHJAdwB+wH/Ab8B1AH4Af8BrQG6AdgB/QGPAaAB5AH/A1EBoANHAYIDRwGAA0oBjANOAZQDSgGM
        A04BlANKAY0DUQGfAWUBZwFUAd4BgAGMASEB+wF0AYkBAAH/AYIBjwEKAf8BbQFxAVMB5wFYAVkBWAG7
        A0oBjANOAZQDSgGMA0oBi4AAA0cBggNHAYADRwGAA1IBowGgAaQBxgH6AbABxQH0Af8BxwHaAfoB/wHO
        Ad8B+wH/Ac4B3wH7Af8BxgHaAfoB/wGvAcUB9AH/AZkBoAHLAfsDUAGeA0cBgANHAYEDRwGCA04BlQNM
        AZMDTAGQA04BmQNKAYoDTgGWA00BkQNNAZEDTgGYA0oBjQNOAZYDTAGQA00BkQNPAZcDSgGMA04BlYAA
        A0cBggNHAYEDRwGBA0cBgANIAYMDWQG6AloBWwG9AnsBhwHnAV4CYAHIAVsCXgHEA1wBwANIAYMDRwGC
        A0cBgQNHAYIDRwGCA0gBgwNOAZkDSgGMA0wBkANOAZYDSAGEA1ABmgNKAYoDTAGSA04BlANIAYQDUAGb
        A0kBiANOAZQDTAGSA0cBgoAAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8pAAEM
        ATAGAAEGAWAGAAEDAcAGAAEBAYAGAAEDAcAGAAEGAWAGAAEMATAmAAs=
</value>
  </data>
</root>